#!/bin/bash


# Starting with 8:00pm tonight, return that datetime if it is later than
# the last commit's timestamp, or increment by two minutes
get_next_date() {
    BASE_DATE=`perl -MPOSIX -e 'print strftime("%Y-%m-%d", localtime);'`
    BASE_DATE=$(date -j -f '%Y-%m-%d %H:%M:%S' "$BASE_DATE 20:00:00" +%s)

    LAST_DATE=`git log -2 --format=%at | tail -1`
    while (( $LAST_DATE >= $BASE_DATE )); do
        ((BASE_DATE+=120))
    done
    echo $BASE_DATE
}

main() {
    if [ -n "$NO_SPLODING" ]; then
        exit 0
    fi

    USE_DATE=$(get_next_date)

    # There's a problem with this if you make a *ton* of commits on the night
    # before a change to or from Daylight Savings Time
    export GIT_COMMITTER_DATE="$USE_DATE $(date +%z)"
    export NO_SPLODING=1
    git commit --quiet --amend -C HEAD --date="$GIT_COMMITTER_DATE" && \
        echo "Diddled the timestamps." || echo "Failed at timestamp diddling!"
}


main
